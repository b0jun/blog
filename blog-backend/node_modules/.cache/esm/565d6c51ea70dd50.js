let jwt,User;_ea7‍.x([["default",()=>_ea7‍.o]]);_ea7‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);_ea7‍.w("../models/user",[["default",["User"],function(v){User=v}]]);


const jwtMiddleware = async (ctx, next) => {
  const token = ctx.cookies.get("access_token");
  if (!token) return next(); //토큰이 없음
  try {
    //2.토큰검증
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    ctx.state.user = {
      _id: decoded._id,
      username: decoded.username
    };
    // 토큰 3.5일 미만 남으면 재발급 | 3.토큰 재발급
    const now = Math.floor(Date.now() / 1000);
    if (decoded.exp - now < 60 * 60 * 24 * 3.5) {
      const user = await User.findById(decoded._id);
      const token = user.generateToken();
      ctx.cookies.set("access_token", token, {
        maxAge: 1000 * 60 * 60 * 24 * 7, // 7일
        httpOnly: true
      });
    }
    return next();
  } catch (e) {
    //토큰 검증 실패
    return next();
  }
};

_ea7‍.d(jwtMiddleware); //main.js에서 app에 미들웨어 적용[router 미들웨어 전]
